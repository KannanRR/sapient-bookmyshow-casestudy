openapi: 3.0.3
info:
  title: City Management API
  version: 1.0.0
  description: API for managing cities.

paths:
  /city:
    post:
      summary: Create a new city
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
      responses:
        '200':
          description: City created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'

  /city/{id}:
    get:
      summary: Get city details by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: City details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'

    delete:
      summary: Delete a city by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: City deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'

    put:
      summary: Update city details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/City'
      responses:
        '200':
          description: City updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'

  /city/all:
    get:
      summary: Get all cities
      responses:
        '200':
          description: List of all cities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'

  /city/search/{city}:
    get:
      summary: Search for cities by name
      parameters:
        - name: city
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cities matching search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateCityResponse'

components:
  schemas:
    City:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        isDeleted:
          type: boolean
        theatres:
          type: array
          items:
            $ref: '#/components/schemas/Theatre'

    CreateCityResponse:
      type: object
      properties:
        name:
          type: string

    Theatre:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        halls:
          type: array
          items:
            $ref: '#/components/schemas/Hall'
        shows:
          type: array
          items:
            $ref: '#/components/schemas/Show'

    Hall:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        seats:
          type: array
          items:
            $ref: '#/components/schemas/Seat'
        features:
          type: array
          items:
            type: string

    Seat:
      type: object
      properties:
        id:
          type: integer
        rowNo:
          type: integer
        columnNo:
          type: integer
        seatType:
          type: string

    Show:
      type: object
      properties:
        id:
          type: integer
        movie:
          type: string
        startTime:
          type: string
          format: date-time
        duration:
          type: integer
        startDate:
          type: string
          format: date
        hall:
          $ref: '#/components/schemas/Hall'
        showSeats:
          type: array
          items:
            $ref: '#/components/schemas/ShowSeat'
        isOnline:
          type: boolean

    ShowSeat:
      type: object
      properties:
        id:
          type: integer
        show:
          $ref: '#/components/schemas/Show'
        seat:
          $ref: '#/components/schemas/Seat'
        status:
          type: string
